name: Build Multistage

on:
  push:
    branches: ["branchHTTPserver"]
  pull_request:
    branches: ["branchHTTPserver"]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        architecture: [amd64, arm64]  # Build for both amd64 and arm64 platforms

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU for multi-architecture support
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build contexts
        run: docker buildx ls  # Check available platforms

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push the Docker image
        run: |
          docker buildx build --platform linux/${{ matrix.architecture }} \
            -t skhtskiryna/my-http-server:${{ matrix.architecture }} --push .

      # Ensure both images are built before creating the manifest
      - name: Create and push multi-architecture manifest
        run: |
          # Wait for both amd64 and arm64 images to be available on Docker Hub
          echo "Waiting for both images to be available on Docker Hub..."
          sleep 10  # Adjust sleep time if needed
          
          # Create a multi-architecture manifest that includes both images
          docker manifest create skhtskiryna/my-http-server:latest \
            --amend skhtskiryna/my-http-server:amd64 \
            --amend skhtskiryna/my-http-server:arm64

          # Push the multi-architecture manifest to Docker Hub
          docker manifest push skhtskiryna/my-http-server:latest
